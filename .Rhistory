plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean Ordering", line = 2, side = 1, cex = .9)
mtext("Freq", line = 2, side = 2, cex = .7)
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2000))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
distanceDistPoint
summary(distanceDistPoint)
length(distanceDistPoint)
fama2019
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500))  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
orderingComp <- function(o1, o2){
p <- length(o1)
temp <- 0
for(i in 1:(p-1)){
d1 <- o1[(i+1):p]
d2 <- o2[which(o2 == o1[i]):p]
temp <- temp + sum(!(d1 %in% d2))
}
return(temp)
}
library(plot.matrix)
famaData <- read.csv("~/Dropbox/confSetGraphs/code/rPkg/data_analysis/data/fama12_23.csv")
# Only include data from 2019-2022
Y <- famaData[which(substr(famaData[,1], 1, 4) >= 2019), -1]
# centered (but not scaled) version which will be used to estimate causal effect later
Y.centered <- scale(Y, scale = F)
# centered and scaled which will be used for point estimate
Y <- scale(Y)
# The sum of squares for distance to calculate frechent mean
sumSq <- as.matrix(read.csv("~/Dropbox/confSetGraphs/code/rPkg/data_analysis/results/sumSq_max_4_2019_23_95.csv"))
# The confidence set with alpha =.1
fama2019 <- as.matrix(read.csv("~/Dropbox/confSetGraphs/code/rPkg/data_analysis/results/fama_max_res_4_2019_23.csv"))
# Point estimate
pointEst <- causalXtreme::direct_lingam_search(Y)
colnames(Y)[pointEst]
# Frechet Mean
frechet_mean <- fama2019[which.min(sumSq), -1]
colnames(Y)[frechet_mean]
# Frechet Mean
frechet_mean <- fama2019[which.min(sumSq), -1]
colnames(Y)[frechet_mean]
### Figure 3 ###
# Make Ancestral matrix
A <- cdcs::getAncest(fama2019)
colnames(A) <- rownames(A) <- colnames(Y)
ZZ <- matrix(0, 12, 12)
ZZ[lower.tri(ZZ, diag = F)] <- 1
symA <- A + t(ZZ - A)
mat <- data.frame(rep(colnames(Y), times = 12), rep(colnames(Y), each = 12), c(symA))
names(mat) <- c("Descendant", "Ancestor", "Proportion")
# Rearrange rows and columns to align with frechet mean
symA.rearrange <- symA[colnames(Y)[frechet_mean], colnames(Y)[frechet_mean]]
colnames(Y)[frechet_mean]
# Make names shorter
rownames(symA.rearrange) <- colnames(symA.rearrange) <- c("Utl", "Enrg", "Whl", "Drb", "Fin",
"Hlth","NoDur", "Tel", "Chem","BsEq", "Mfg","Other")
# Get Distances from Frechet Mean
distanceDistMean <- rep(0, nrow(fama2019))
distanceDistPoint <- rep(0, nrow(fama2019))
for(i in 1:nrow(fama2019)){
distanceDistMean[i] <- orderingComp(fama2019[i, -1], fama2019[which.min(sumSq), -1])
distanceDistPoint[i] <- orderingComp(fama2019[i, -1], pointEst)
}
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 2, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"))
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 2, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 0, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 0, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,50), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,50), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
factorial(12) / nrow(fama2019[which(fama2019[,1] > .05), ])
setEPS()
postscript("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/frechetMean_max23.eps",
width = 8, height = 3)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
# Creaste Ancest MAt
ancestMat <- cdcs::getAncest(fama2019[which(fama2019[,1] > .1), ])
colnames(ancestMat) <- rownames(ancestMat) <- names(Y)
ancestMat <- round(ancestMat, 2)
ancestMat[upper.tri(ancestMat, diag = T)] <- ""
xtable::xtable(ancestMat)
ancestMat <- cdcs::getAncest(fama2019[which(fama2019[,1] > .05), ])
colnames(ancestMat) <- rownames(ancestMat) <- names(Y)
ancestMat <- round(ancestMat, 2)
ancestMat[upper.tri(ancestMat, diag = T)] <- ""
xtable::xtable(ancestMat)
colnames(Y)
colnames(Y)[pointEst]
colnames(Y)[frechet_mean]
rgb(0,0,1,1/4)
setEPS()
postscript("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/frechetMean_max23.eps",
width = 8, height = 3, colormodel = "rgb")
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
cairo_ps("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/frechetMean_max23.eps",
width = 8, height = 3)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
pdf("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/frechetMean_max23.pdf",
width = 8, height = 3)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2,
cex = .5)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
dev.off()
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2,
cex = .5)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2,
cex = .5)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
pdf("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/frechetMean_max23.pdf",
width = 8, height = 3)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
# hist(distanceDistMean, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
# hist(distanceDistPoint, xlab = "", main = "", cex.axis = .7, ylab = "", xlim = c(0, 50))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2,
cex = .5)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
pdf("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/frechetMean_max23.pdf",
width = 8, height = 3)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2,
cex = .5)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
p1 <- hist(distanceDistMean)
p2 <- hist(distanceDistPoint)
pdf("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/frechetMean_max23.pdf",
width = 8, height = 3)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("top", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2,
cex = .8)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
colnames(Y)[pointEst]
colnames(Y)
colnames(Y)[pointEst]
# Mfg (3) onto Energy (4)
treatmeant <- 3
outcome <- 4
out <- cdcs::ci_modSelect(fama2019, treatmeant, outcome, effectType = "total", alpha = .05, Y.centered)
outReg <- lm(Y.centered[, outcome, drop = F] ~  Y.centered[, pointEst[1:which(pointEst == treatmeant) ]] -1)
confint(outReg, level = .9)
out
colnames(Y)
colnames(Y)[pointEst]
treatmeant <- 10
outcome <- 9
out <- cdcs::ci_modSelect(fama2019, treatmeant, outcome, effectType = "total", alpha = .05, Y.centered)
outReg <- lm(Y.centered[, outcome, drop = F] ~  Y.centered[, pointEst[1:which(pointEst == treatmeant) ]] -1)
confint(outReg, level = .9)
out
treatmeant <- 4
outcome <- 2
out <- cdcs::ci_modSelect(fama2019, treatmeant, outcome, effectType = "total", alpha = .05, Y.centered)
outReg <- lm(Y.centered[, outcome, drop = F] ~  Y.centered[, pointEst[1:which(pointEst == treatmeant) ]] -1)
confint(outReg, level = .9)
out
colnames(Y)
colnames(Y)[pointEst]
treatmeant <- 5
outcome <- 3
out <- cdcs::ci_modSelect(fama2019, treatmeant, outcome, effectType = "total", alpha = .05, Y.centered)
out
colnames(Y)[c(treatment, outcome)]
treatment <- 5
outcome <- 3
colnames(Y)[c(treatment, outcome)]
colnames(Y)[pointEst]
out
treatment <- 4
outcome <- 2
out <- cdcs::ci_modSelect(fama2019, treatment, outcome, effectType = "total", alpha = .05, Y.centered)
outReg <- lm(Y.centered[, outcome, drop = F] ~  Y.centered[, pointEst[1:which(pointEst == treatment) ]] -1)
confint(outReg, level = .9)
out
pdf("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/frechetMean_max23.pdf",
width = 8, height = 3)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 2), mfrow = c(1,2))
plot( p1, col=rgb(0,0,1,1/4), xlim=c(0,42), ylim = c(0, 2500), xlab = "", ylab = "", main = "")  # first histogram
plot( p2, col=rgb(1,0,0,1/4), xlim=c(0,42), add=T)  # second
mtext("Distance from Mean and Point Est", line = 2, side = 1, cex = .9)
# mtext("Freq", line = 2, side = 2, cex = .7)
# abline(v = orderingComp(fama2019[which.min(sumSq), -1], pointEst), col = "red")
legend("topleft", pch = 15, col = c(rgb(0,0,1,1/4), rgb(1,0,0,1/4)), legend = c("Mean", "Pt Est"), ncol = 2,
cex = .7)
plot(symA.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
dev.off()
### Getting CI's per edge (reviewer comments) ###
lengthMat <- matrix(0, 12, 12)
adjMat <- matrix(0, 12, 12)
for(j in 1:12){
for(k in 1:12){
if(j != k){
temp <- cdcs::ci_modSelect(fama2019, k, j, effectType = "total", alpha = .05, Y.centered)
lengthMat[j, k] <- temp$le
adjMat[j, k] <- temp$num
}
}
}
colnames(lengthMat) <- rownames(lengthMat) <-
colnames(adjMat) <- rownames(adjMat) <- colnames(Y)
lengthMat.rearrange <- lengthMat[colnames(Y)[frechet_mean], colnames(Y)[frechet_mean]]
rownames(symA.rearrange) <- colnames(symA.rearrange) <- c("Utl", "Enrg", "Hlth", "NoDr", "Drb",
"Chem","Whl", "Fin", "Mfg","BusEq", "Tel","Oth")
adjMat.rearrange <- adjMat[colnames(Y)[frechet_mean], colnames(Y)[frechet_mean]]
rownames(symA.rearrange) <- colnames(symA.rearrange) <- c("Utl", "Enrg", "Hlth", "NoDr", "Drb",
"Chem","Whl", "Fin", "Mfg","BusEq", "Tel","Oth")
library(plot.matrix)
setEPS()
postscript("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/ciHeat_max23.eps",
width = 8, height = 3)
par(oma = c(0, 0, 0, 2), mar = c(5, 4, 2, 5), mfrow = c(1,2))
plot(lengthMat.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
mtext("Length of CI", side = 3, line = 0, cex = .9)
par(mar = c(5, 5, 2, 2))
plot(adjMat.rearrange, col = c("white",RColorBrewer::brewer.pal(n = 9, "Blues")),
cex.axis = .8, las = 2, xlab = "", ylab = "",
main = "", key=list(cex.axis=.8, tick=FALSE, side = 4),
spacing.key = c(1,.5, -.2))
mtext("Descendant", side = 2, line = 3, cex = .9)
mtext("Ancestor", side = 1, line = 3, cex = .9)
mtext("Num of Adjustment Sets", side = 3, line = 0, cex = .9)
dev.off()
colnames(Y)
colnames(Y)[pointEst]
colnames(Y)[frechet_mean]
# Energy (4) onto Durables (2)
treatment <- 4
outcome <- 2
colnames(Y)[c(treatment, outcome)]
out <- cdcs::ci_modSelect(fama2019, treatment, outcome, effectType = "total", alpha = .05, Y.centered)
outReg <- lm(Y.centered[, outcome, drop = F] ~  Y.centered[, pointEst[1:which(pointEst == treatment) ]] -1)
confint(outReg, level = .9)
out
treatment <- 5
outcome <- 3
colnames(Y)[c(treatment, outcome)]
out <- cdcs::ci_modSelect(fama2019, treatment, outcome, effectType = "total", alpha = .05, Y.centered)
out
