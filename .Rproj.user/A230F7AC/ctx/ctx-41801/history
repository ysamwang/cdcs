xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("n", side = 1, line = 2)
mtext("Proportion", side = 2, line = 2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, 1, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(ancestTab[which(ancestTab$distro == d.list[i]),3], type = "b",  col = i, pch = 19)
}
mtext("Proportion of Orderings", side = 3, line = 1)
mtext("Proportion of Orderings", side = 3, line = .5)
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Point Estimate", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(pointTab[which(pointTab$distro == d.list[i]),3], type = "b",col = i, pch = 1,
lty = 3, lwd = 2)
}
legend("top", legend = d.list, col = c(1:length(d.list)), pch = 19, ncol = 6)
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, 1), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Ancestral Relations", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, 1, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(ancestTab[which(ancestTab$distro == d.list[i]),3], type = "b",  col = i, pch = 19)
}
dev.off()
setEPS()
postscript("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/confSets.eps", width = 6.5, height = 5)
par(mar = c(3, 3, 2, .5), mfrow = c(1,3))
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Size of Set", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(sizeTab[which(sizeTab$distro == d.list[i]),3], type = "b", ylim = c(0, max(sizeTab[,3])),
col = i, pch = 19, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Point Estimate", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(pointTab[which(pointTab$distro == d.list[i]),3], type = "b",col = i, pch = 1,
lty = 3, lwd = 2)
}
legend("top", legend = d.list, col = c(1:length(d.list)), pch = 19, ncol = 6)
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, 1), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Ancestral Relations", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, 1, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(ancestTab[which(ancestTab$distro == d.list[i]),3], type = "b",  col = i, pch = 19)
}
dev.off()
setEPS()
postscript("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/confSets.eps", width = 6.5, height = 3)
par(mar = c(3, 3, 2, .5), mfrow = c(1,3))
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Size of Set", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(sizeTab[which(sizeTab$distro == d.list[i]),3], type = "b", ylim = c(0, max(sizeTab[,3])),
col = i, pch = 19, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Point Estimate", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(pointTab[which(pointTab$distro == d.list[i]),3], type = "b",col = i, pch = 1,
lty = 3, lwd = 2)
}
legend("top", legend = d.list, col = c(1:length(d.list)), pch = 19, ncol = 6)
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, 1), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Ancestral Relations", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, 1, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(ancestTab[which(ancestTab$distro == d.list[i]),3], type = "b",  col = i, pch = 19)
}
dev.off()
setEPS()
postscript("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/confSets.eps", width = 6.5, height = 3)
par(mar = c(3, 3, 2, .5), mfrow = c(1,3))
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Size of Set", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(sizeTab[which(sizeTab$distro == d.list[i]),3], type = "b", ylim = c(0, max(sizeTab[,3])),
col = i, pch = 19, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Point Estimate", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(pointTab[which(pointTab$distro == d.list[i]),3], type = "b",col = i, pch = 1,
lty = 3, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, 1), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Ancestral Relations", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, 1, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(ancestTab[which(ancestTab$distro == d.list[i]),3], type = "b",  col = i, pch = 19)
}
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = 'l', bty = 'n', xaxt = 'n', yaxt = 'n')
legend("top", legend = d.list, col = c(1:length(d.list)), ncol = 6,
lwd = 5, xpd = TRUE, horiz = TRUE, cex = 1, seg.len=1, bty = 'n')
dev.off()
par(mar = c(3, 3, 2, .5), mfrow = c(1,3), oma = c(2, 0, 0,0))
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
par(mar = c(3, 3, 2, .5), mfrow = c(1,3), oma = c(2, 0, 0,0))
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Size of Set", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(sizeTab[which(sizeTab$distro == d.list[i]),3], type = "b", ylim = c(0, max(sizeTab[,3])),
col = i, pch = 19, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Point Estimate", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(pointTab[which(pointTab$distro == d.list[i]),3], type = "b",col = i, pch = 1,
lty = 3, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, 1), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Ancestral Relations", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, 1, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(ancestTab[which(ancestTab$distro == d.list[i]),3], type = "b",  col = i, pch = 19)
}
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = 'l', bty = 'n', xaxt = 'n', yaxt = 'n')
legend("bottom", legend = d.list, col = c(1:length(d.list)), ncol = 6,
lwd = 5, xpd = TRUE, horiz = TRUE, cex = 1, seg.len=1, bty = 'n')
setEPS()
postscript("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/confSets.eps", width = 6.5, height = 3)
par(mar = c(3, 3, 2, .5), mfrow = c(1,3), oma = c(2, 0, 0,0))
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Size of Set", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(sizeTab[which(sizeTab$distro == d.list[i]),3], type = "b", ylim = c(0, max(sizeTab[,3])),
col = i, pch = 19, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Point Estimate", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(pointTab[which(pointTab$distro == d.list[i]),3], type = "b",col = i, pch = 1,
lty = 1, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, 1), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Ancestral Relations", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, 1, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(ancestTab[which(ancestTab$distro == d.list[i]),3], type = "b",  col = i, pch = 19)
}
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = 'l', bty = 'n', xaxt = 'n', yaxt = 'n')
legend("bottom", legend = d.list, col = c(1:length(d.list)), ncol = 6,
lwd = 5, xpd = TRUE, horiz = TRUE, cex = 1, seg.len=1, bty = 'n')
dev.off()
setEPS()
postscript("~/Dropbox/Apps/Overleaf/Confidence Sets for Causal Discovery/figures/confSets.eps", width = 6.5, height = 3)
par(mar = c(3, 3, 2, .5), mfrow = c(1,3), oma = c(2, 0, 0,0))
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Size of Set", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(sizeTab[which(sizeTab$distro == d.list[i]),3], type = "b", ylim = c(0, max(sizeTab[,3])),
col = i, pch = 19, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Point Estimate", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, .6, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(pointTab[which(pointTab$distro == d.list[i]),3], type = "b",col = i, pch = 1,
lty = 1, lwd = 2)
}
i <- 1
plot(sizeTab[which(sizeTab$distro == d.list[i]),3], ylim = c(0, max(sizeTab[,3])), col = i,
xaxt = "n", pch = "", ylab = "", xlab = "")
axis(side = 1, at = c(1:4), labels = c(500, 1000, 2500, 5000))
mtext("Ancestral Relations", side = 3, line = .2)
rect(par("usr")[1], par("usr")[3],
par("usr")[2], par("usr")[4],
col = "gray90") # Color
abline(h = seq(0, 1, by = .1), col = "white", lty = 1, lwd = 1.2)
for(i in 1:length(d.list)){
lines(ancestTab[which(ancestTab$distro == d.list[i]),3], type = "b",  col = i, pch = 19)
}
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
plot(0, 0, type = 'l', bty = 'n', xaxt = 'n', yaxt = 'n')
legend("bottom", legend = d.list, col = c(1:length(d.list)), ncol = 6,
lwd = 5, xpd = TRUE, horiz = TRUE, cex = 1, seg.len=1, bty = 'n')
dev.off()
timeTab <- aggregate(time ~ n + distro, dat = outTab, FUN = mean)
timeTab
timePrintTab <- timeTab[1:4,c(1)]
for(i in 1:length(d.list)){
timePrintTab <- cbind(timePrintTab, timeTab[4 * (i-1) +(1:4),3])
colnames(timePrintTab)[i+1] <- as.character(timeTab[4 * (i-1) +1,2])
}
colnames(timePrintTab)[1] <- "n"
print(xtable::xtable(timePrintTab, digits = c(0, 0, rep(0, 6))), include.rownames = F)
timeTab
timeTab[1:4,c(1)]
timePrintTab <- timeTab[1:4,c(1)]
for(i in 1:length(d.list)){
timePrintTab <- cbind(timePrintTab, timeTab[4 * (i-1) +(1:4),3])
colnames(timePrintTab)[i+1] <- as.character(timeTab[4 * (i-1) +1,2])
}
colnames(timePrintTab)[1] <- "n"
print(xtable::xtable(timePrintTab, digits = c(0, 0, rep(0, 6))), include.rownames = F)
G <- ((row(diag(p)) - col(diag(p))) == 1) + 0
p <- 6
G <- ((row(diag(p)) - col(diag(p))) == 1) + 0
G
Omega <- G * matrix(sample(c(-1), replace = T, size = p^2) * runif(p^2, .05, .2), p, p)
Omega <- Omega + t(Omega)
diag(Omega) <- rowSums(abs(Omega)) + 1
d <- pi/5
D <- d * diag(p)
Sigma <- solve(Omega)
Sigma
Theta <- Sigma + D
Sigma1 <- Sigma
Sigma1[1,1] <- Sigma1[1,1] - 1/Omega[1,1]
solve(Sigma1)
Theta
install.packages("clime")
clime::clime(Theta - diag(d), sigma = T)
diag(d)
Theta - diag(rep(d, p))
clime::clime(Theta - diag(rep(d, p)), sigma = T)
clime::clime(Theta - diag(rep(d, p)), sigma = T, peturb = T)
clime::clime(Theta - diag(rep(d, p)), sigma = T)
X <- mvtnorm::rmvnorm(10000, sigma = Theta)
clime::clime(X)
out <- clime::clime(X)
out$Omegalist
round(out$Omegalist)
round(out$Omegalist[[1]])
round(out$Omegalist[[1]], 2)
out$lambda
clime::clime(Theta, sigma = T)
?clime::clime
clime::clime(Theta, sigma = TRUE)
X <- mvtnorm::rmvnorm(100000, sigma = Theta)
out <- clime::clime(X)
round(out$Omegalist[[1]], 2)
X <- mvtnorm::rmvnorm(100000, sigma = Sigma)
clime::clime(Theta, sigma = TRUE)
Theta <- Sigma + D
Theta
X <- mvtnorm::rmvnorm(100000, sigma = Sigma)
out <- clime::clime(X)
round(out$Omegalist[[1]], 2)
out$lambda
round(out$Omegalist[[1]], 2)
round(Sigma, 2)
round(Omega, 2)
round(out$Omegalist[[1]], 2)
round(Omega, 2)
X <- mvtnorm::rmvnorm(100000, sigma = Sigma)
out <- clime::clime(X, standardize = F)
round(out$Omegalist[[1]], 2)
round(Omega, 2)
round(out$Omegalist[[1]], 2) - round(Omega, 2)
out <- clime::clime(Sigma, sigma = T, standardize = F)
out <- clime::clime(Sigma, sigma = T, standardize = F)
out <- clime::clime(Sigma, sigma = T, standardize = F, perturb = T)
out <- clime::clime(Sigma, sigma = T, standardize = F, perturb = F)
out <- clime::clime(Sigma, sigma = T, standardize = F)
X <- mvtnorm::rmvnorm(100000, sigma = Theta)
cov(X)
out <- clime::clime(cov(X), sigma = T, standardize = F)
out <- clime::clime(x = cov(X), sigma = T, standardize = F)
cov(X)
out <- clime::clime(x = cov(X), sigma = TRUE, standardize = F)
out <- clime::clime(x = cov(X), sigma = TRUE)
clime
clime::clime
X <- mvtnorm::rmvnorm(100000, sigma = Theta)
out <- clime::clime(x = cov(X), sigma = TRUE)
out <- clime::clime(x = cov(X), sigma = TRUE, lambda.min = .0001, lambda.max = .5)
?clime::clime
out <- clime::clime(x = cov(X), sigma = TRUE, lambda = c(.001, .05, .1, .3),
standardize = F)
round(out$Omegalist[[1]], 2) - round(Omega, 2)
out$lambda
X <- mvtnorm::rmvnorm(100000, sigma = Sigma)
out <- clime::clime(x = cov(X), sigma = TRUE, lambda = c(.001, .05, .1, .3),
standardize = F)
round(out$Omegalist[[1]], 2) - round(Omega, 2)
pi/5
d.list <- seq(0, 1, by = .01)
apply(d.list, test)
apply(d.list, FUN = test)
test <- function(d, Theta){
out <- clime::clime(x = cov(X), sigma = TRUE, lambda = c(.001, .05, .1, .3, .8),
standardize = F)
sum(abs(out$Omegalist[[1]]))
}
d.list <- seq(0, 1, by = .01)
apply(d.list, FUN = test)
test <- function(d, Theta){
out <- clime::clime(x = cov(X), sigma = TRUE, lambda = c(.001, .05, .1, .3, .8),
standardize = F)
sum(abs(out$Omegalist[[1]]))
}
sapply(d.list, FUN = test)
test <- function(d, S){
p <- ncol(S)
out <- clime::clime(x = S - diag(rep(d,p)), sigma = TRUE, lambda = c(.001, .05, .1, .3, .8),
standardize = F)
sum(abs(out$Omegalist[[1]]))
}
test <- function(d, S){
p <- ncol(S)
out <- clime::clime(x = S - diag(rep(d,p)), sigma = TRUE, lambda = c(.001, .05, .1, .3, .8),
standardize = F)
sum(abs(out$Omegalist[[1]]))
}
X <- mvtnorm::rmvnorm(100000, sigma = Theta)
S <- cov(X)
d.list <- seq(0, 1, by = .01)
out <- sapply(d.list, S = S, FUN = test)
out
plot(d.list, out)
test(.1, S)
test(.1, S)
plot(d.list, out)
test <- function(d, S){
p <- ncol(S)
out <- clime::clime(x = S - diag(rep(d,p)), sigma = TRUE, lambda = c(.001, .05, .1, .3, .8),
standardize = F)
sum(abs(out$Omegalist[[1]]))
}
X <- mvtnorm::rmvnorm(100000, sigma = Theta)
S <- cov(X)
test(.1, S)
d.list <- seq(0, 1, by = .01)
out <- sapply(d.list, S = S, FUN = test)
plot(d.list, out)
test <- function(d, S){
p <- ncol(S)
out <- clime::clime(x = S - diag(rep(d,p)), sigma = TRUE, lambda = c(.001, .05, .1, .3, .8),
standardize = F)
sum(abs(out$Omegalist[[1]][lower.tri(out$Omegalist[[1]])]))
}
X <- mvtnorm::rmvnorm(100000, sigma = Theta)
S <- cov(X)
test(.1, S)
d.list <- seq(0, 1, by = .01)
out <- sapply(d.list, S = S, FUN = test)
plot(d.list, out)
test(0, S)
HOLS.check
source("hols.R")
sample.size <- 500
rep.runs <- 125
p.list <- c(10, 15, 20, 30, 45)
d.list <- c("unif", "lognorm", "gamma", "weibull", "laplace", "mixed")
pow.list <- c(2, 5/4)
pp.list <- c(1/2)
param.grid <- expand.grid(rep(p.list, sample.size / rep.runs), d.list, pow.list, pp.list)
nrow(param.grid)
## Param Grid 480
p <- param.grid[runInd, 1]
sample.size <- 500
rep.runs <- 125
p.list <- c(10, 15, 20, 30, 45)
d.list <- c("unif", "lognorm", "gamma", "weibull", "laplace", "mixed")
pow.list <- c(2, 5/4)
pp.list <- c(1/2)
param.grid <- expand.grid(rep(p.list, sample.size / rep.runs), d.list, pow.list, pp.list)
nrow(param.grid)
## Param Grid 480
p <- param.grid[runInd, 1]
sample.size <- 500
rep.runs <- 125
p.list <- c(10, 15, 20, 30, 45)
d.list <- c("unif", "lognorm", "gamma", "weibull", "laplace", "mixed")
pow.list <- c(2, 5/4)
pp.list <- c(1/2)
param.grid <- expand.grid(rep(p.list, sample.size / rep.runs), d.list, pow.list, pp.list)
nrow(param.grid)
sample.size <- 500
rep.runs <- 100
p.list <- c(10, 15, 20, 30, 45)
d.list <- c("unif", "lognorm", "gamma", "weibull", "laplace", "mixed")
pow.list <- c(2, 5/4)
pp.list <- c(1/2)
param.grid <- expand.grid(rep(p.list, sample.size / rep.runs), d.list, pow.list, pp.list)
nrow(param.grid)
sample.size
param.grid
