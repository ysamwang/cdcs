cat(i)
cat(" ")
}
colMeans(rec[1:i,] < .05)
n <- 1000
ss <- 200
a <- 0
lam <- 5
rec <- matrix(0, ss, 6)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
X.tot <- cbind(X, X4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 3] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))[1]
rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 6] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
colMeans(rec[1:i,] < .05)
n <- 5000
ss <- 200
a <- 0
lam <- 5
rec <- matrix(0, ss, 6)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
X.tot <- cbind(X, X4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 3] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))[1]
rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 6] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
colMeans(rec[1:i,] < .05)
n <- 100
ss <- 200
a <- 0
lam <- 25
rec <- matrix(0, ss, 6)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
X.tot <- cbind(X, X4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 3] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))[1]
rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 6] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
colMeans(rec[1:i,] < .05)
n <- 100
ss <- 300
a <- 0
lam <- 25
rec <- matrix(0, ss, 6)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
X.tot <- cbind(X, X4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 3] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))[1]
rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 6] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
colMeans(rec[1:i,] < .05)
n <- 100
ss <- 300
a <- 0
lam <- 25
rec <- matrix(0, ss, 6)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 3] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))[1]
rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 6] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
colMeans(rec[1:i,] < .05)
n <- 100
ss <- 500
lam.list <- c(0, 5, 10, 15, 20, 25, 50)
rec.total <- matrix(0, length(lam.list), 2)
a <- 0
for(l in 1:length(lam.list)){
lam <- lam.list[l]
cat("lambda: ")
cat(lam)
cat("\n")
rec <- matrix(0, ss, 6)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))[1]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 2] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
colMeans(rec[1:i,] < .05)
rec.total[l,]
n <- 100
ss <- 500
lam.list <- c(0, 5, 10, 15, 20, 25, 50)
rec.total <- matrix(0, length(lam.list), 2)
a <- 0
for(l in 1:length(lam.list)){
lam <- lam.list[l]
cat("lambda: ")
cat(lam)
cat("\n")
rec <- matrix(0, ss, 2)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))[1]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 2] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
rec.total
n <- 200
ss <- 500
lam.list <- c(0, 5, 10, 15, 20, 25, 50)
rec.total <- matrix(0, length(lam.list), 2)
a <- 0
for(l in 1:length(lam.list)){
lam <- lam.list[l]
cat("lambda: ")
cat(lam)
cat("\n")
rec <- matrix(0, ss, 2)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))[1]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 2] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
n <- 200
ss <- 500
lam.list <- c(0, 5, 10, 15, 20, 25, 50)
rec.total <- matrix(0, length(lam.list), 2)
a <- 0
for(l in 1:length(lam.list)){
lam <- lam.list[l]
cat("lambda: ")
cat(lam)
cat("\n")
rec <- matrix(0, ss, 3)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1:2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3))
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 3] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
[,1]  [,2]
[1,] 0.036 0.064
[2,] 0.218 0.216
[3,] 0.198 0.282
[4,] 0.228 0.304
[5,] 0.200 0.322
[6,] 0.214 0.346
[7,] 0.222 0.360
n <- 200
ss <- 500
lam.list <- c(0, 5, 10, 15, 20, 25, 50)
rec.total <- matrix(0, length(lam.list), 2)
a <- 0
for(l in 1:length(lam.list)){
lam <- lam.list[l]
cat("lambda: ")
cat(lam)
cat("\n")
rec <- matrix(0, ss, 3)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1:2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = F)
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 3] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
[,1]  [,2]
[1,] 0.036 0.064
[2,] 0.218 0.216
[3,] 0.198 0.282
[4,] 0.228 0.304
[5,] 0.200 0.322
[6,] 0.214 0.346
[7,] 0.222 0.360
n <- 200
ss <- 200
lam.list <- c(0, 5, 10, 15, 20, 25, 50)
rec.total <- matrix(0, length(lam.list), 3)
a <- 0
for(l in 1:length(lam.list)){
lam <- lam.list[l]
cat("lambda: ")
cat(lam)
cat("\n")
rec <- matrix(0, ss, 3)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1:2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = F)
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 3] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
[,1]  [,2]
[1,] 0.036 0.064
[2,] 0.218 0.216
[3,] 0.198 0.282
[4,] 0.228 0.304
[5,] 0.200 0.322
[6,] 0.214 0.346
[7,] 0.222 0.360
rec.total
n <- 200
ss <- 200
lam.list <- c(0, 5, 10, 15, 20, 25, 50)
rec.total <- matrix(0, length(lam.list), 3)
a <- 0
for(l in 1:length(lam.list)){
lam <- lam.list[l]
cat("lambda: ")
cat(lam)
cat("\n")
rec <- matrix(0, ss, 3)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1:2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = T)
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 3] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
rec.total
[,1]  [,2]
[1,] 0.036 0.064
[2,] 0.218 0.216
[3,] 0.198 0.282
[4,] 0.228 0.304
[5,] 0.200 0.322
[6,] 0.214 0.346
[7,] 0.222 0.360
n <- 200
ss <- 200
lam.list <- c(0, 5, 10, 15, 20, 25, 50)
rec.total <- matrix(0, length(lam.list), 5)
a <- 0
for(l in 1:length(lam.list)){
lam <- lam.list[l]
cat("lambda: ")
cat(lam)
cat("\n")
rec <- matrix(0, ss, 5)
for(i in 1:ss){
## Mod 2
X <- mvtnorm::rmvnorm(n, sigma = matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), byrow = T, 3, 3))
X4 <- rbinom(n, size = 1, prob = .4)
# errs <- rnorm(n)
errs <- rnorm(n, sd = sqrt((1 + lam * abs(X[,1]) ) /2))
Y <- X[,1] + a * X[,2]^2 + 2 * X4 + errs
Y <- scale(Y)
X.tot <- scale(cbind(X, X4))
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1:2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = T)
rec[i, 3:4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = F)
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 3] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
rec.total
[,1]  [,2]
[1,] 0.036 0.064
[2,] 0.218 0.216
[3,] 0.198 0.282
[4,] 0.228 0.304
[5,] 0.200 0.322
[6,] 0.214 0.346
[7,] 0.222 0.360
p <- 5
n.list <- c(15, 25, 50, 100, 200, 500)
rec.total <- matrix(0, length(lam.list), 5)
a <- 0
for(l in 1:length(n.list)){
n <- n.list[l]
cat("N: ")
cat(n)
cat("\n")
rec <- matrix(0, ss, 5)
for(i in 1:ss){
dat <- rDAG(n = n, p = p, 1/3,uniqueTop = T, dist = "laplace")
Y <- scale(dat$Y[,5])
X.tot <- scale(Y[, 1:4])
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1:2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = T)
rec[i, 3:4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = F)
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 5] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
cat("\n")
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
rec.total
for(l in 1:length(n.list)){
n <- n.list[l]
cat("N: ")
cat(n)
cat("\n")
rec <- matrix(0, ss, 5)
for(i in 1:ss){
dat <- rDAG(n = n, p = p, 1/3,uniqueTop = T, dist = "laplace")
Y <- scale(dat$Y[,5])
X.tot <- scale(dat$Y[, 1:4])
# rec[i, 1] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 2)[1]
# rec[i, 2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 3)[2]
rec[i, 1:2] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = T)
rec[i, 3:4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = c(2,3), intercept = F)
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, K = 4)[2]
# rec[i, 4] <- cdcs::dkw2020(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
# rec[i, 5] <- cdcs::senSen2014(X = X.tot, Y = Y, statType = "hsic", kernel = "gaussian.fixed")[1]
rec[i, 5] <- senSenWrapper(x = X.tot, X = X.tot, y = Y)
cat(i)
cat(" ")
}
cat("\n")
rec.total[l,] <- colMeans(rec[1:i,] < .05)
}
rec.total
X <- mvtnorm::rmvnorm(n, sigma= diag(5))
Y <- mvtnorm::rmvnorm(n, sigma= diag(5))
energy::dcor(x = X, y = Y)
energy::dcor(x = X, y = Y)
